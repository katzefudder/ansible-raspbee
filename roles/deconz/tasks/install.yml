---

- stat: path=/boot/cmdline.txt
  register: cmdline_file

- name: disable serial console
  replace:
    dest: /boot/cmdline.txt
    regexp: 'console=ttyAMA0,115200'
    replace: ''
  register: serial_con_status
  when: cmdline_file.stat.exists

- name: install deconz dependencies
  package: name={{ item }} state=present
  with_items:
    - libqtcore4
    - libqt4-network
    - libqtgui4

- name: get deconz software
  get_url:
    dest: "/root/{{ item.key }}.deb"
    url: "{{ item.value }}"
  with_dict:  "{{ deconz_packages }}"
  register: deconz_download_status

- name: restart machine
  command: shutdown -r now "Serial console disabled"
  async: 0
  poll: 0
  ignore_errors: true
  when: serial_con_status is changed

- local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10
  become: false|bool
  when: serial_con_status is changed

- name: install deconz
  apt: deb=/root/{{ item.key }}.deb state=present
  with_dict: "{{ deconz_packages }}"
  when: stage == "production"
  notify:
  - start deconz

- file: path=/home/pi/.config/autostart/ state=directory

- name: put deconz into autostart
  copy:
    src: files/deCONZ.desktop
    dest: /home/pi/.config/autostart/deCONZ.desktop
    owner: pi
    group: pi

# FIXME: Those files obviously only exist if deCONZ ran before
# might try adding the file and see if deCONZ accepts that owner
# try to run deCONZ but it needs X ..
#- name: change port
#  replace:
#    dest: /home/pi/.local/share/data/dresden-elektronik/deCONZ/config.ini
#    regexp: /port=8080/
#    replace: 'port=8081'

- include: templates.yml
